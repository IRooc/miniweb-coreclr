@using System.Collections.Generic
@using Microsoft.AspNet.Http
@using Microsoft.AspNet.Http.Authentication
@inject MiniWeb.Core.IMiniWebSite MiniWebSite
@{
	Layout = "~/Views/_layout.cshtml";
}
<div>
	<form action="@Model.Url" method="post" role="form" class="col-md-5 col-md-offset-3 miniweb-login" id="login">
		<fieldset>
			<h1 class="text-center">Sign in</h1>
			@if (ViewBag.ErrorMessage != null)
			{
				<div class="alert alert-danger" role="alert">
					@ViewBag.ErrorMessage
				</div>

			}

			<div class="form-group">
				<label for="username">Username</label>
				<input type="text" class="form-control" id="username" name="username" placeholder="Username" required autofocus />
			</div>

			<div class="form-group">
				<label for="password">Password</label>
				<input type="password" class="form-control" id="password" name="password" placeholder="Password" required />
			</div>
			<div class="form-group">
				<input type="checkbox" id="remember" name="remember" value="true" />
				<label for="remember">&nbsp;Remember me</label>
			</div>

			<button type="submit" class="btn btn-primary">Sign in</button>
		</fieldset>

	</form>


	@if (Context.Authentication.GetAuthenticationSchemes().Any(s => s.AuthenticationScheme != "MiniWebCms"))
	{
		<form action="@MiniWebSite.Configuration.Authentication.SocialLoginPath" method="post" class="col-md-5 col-md-offset-3 form-horizontal" role="form">
			<hr />
			<fieldset>
				<h4>Use another service to log in.</h4>
				@foreach (var type in Context.Authentication.GetAuthenticationSchemes().Where(s => s.AuthenticationScheme != "MiniWebCms"))
				{
					<button type="submit" class="btn btn-default" name="provider" value="@type.AuthenticationScheme" title="@type.Caption">@type.Caption</button>
				}
			</fieldset>
		</form>

	}
</div>